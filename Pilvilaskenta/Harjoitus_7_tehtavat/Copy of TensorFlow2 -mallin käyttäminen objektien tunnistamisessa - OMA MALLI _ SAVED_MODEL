{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of TensorFlow2 -mallin käyttäminen objektien tunnistamisessa - OMA MALLI / SAVED_MODEL","provenance":[{"file_id":"1kun6PzMrZ8WnhmUunS-2qALOYc33dJgJ","timestamp":1639560067992},{"file_id":"11kRJhCbIqGPE61l1tudoCebQ1JEQm08e","timestamp":1637771876587},{"file_id":"1_y61yjBgFF0-th-How6eYZVNSdx7Kx2Q","timestamp":1637770504997}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Tz-2ANrruy9b"},"source":["**ASENNETAAN TARVITTAVIA MODUULEJA YM.**"]},{"cell_type":"code","metadata":{"id":"_D5CCBnfqfDE","executionInfo":{"status":"ok","timestamp":1639559557672,"user_tz":-120,"elapsed":30278,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}},"outputId":"c261a092-b6d2-432d-8632-72094af8704e","colab":{"base_uri":"https://localhost:8080/"}},"source":["!git clone https://github.com/tensorflow/models"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'models'...\n","remote: Enumerating objects: 67981, done.\u001b[K\n","remote: Total 67981 (delta 0), reused 0 (delta 0), pack-reused 67981\u001b[K\n","Receiving objects: 100% (67981/67981), 576.39 MiB | 21.60 MiB/s, done.\n","Resolving deltas: 100% (47737/47737), done.\n"]}]},{"cell_type":"code","metadata":{"id":"awrGb6h5q9h_","executionInfo":{"status":"ok","timestamp":1639559557673,"user_tz":-120,"elapsed":14,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}}},"source":["import os\n","os.chdir('/content/models/research')\n","!protoc object_detection/protos/*.proto --python_out=."],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"uA62aUC8uq84","executionInfo":{"status":"ok","timestamp":1639559561595,"user_tz":-120,"elapsed":3932,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}},"outputId":"218b138c-0e13-4668-dbc8-3225856217b4","colab":{"base_uri":"https://localhost:8080/"}},"source":["!pip install tf-slim"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting tf-slim\n","  Downloading tf_slim-1.1.0-py2.py3-none-any.whl (352 kB)\n","\u001b[?25l\r\u001b[K     |█                               | 10 kB 28.8 MB/s eta 0:00:01\r\u001b[K     |█▉                              | 20 kB 31.8 MB/s eta 0:00:01\r\u001b[K     |██▉                             | 30 kB 19.8 MB/s eta 0:00:01\r\u001b[K     |███▊                            | 40 kB 16.5 MB/s eta 0:00:01\r\u001b[K     |████▋                           | 51 kB 7.6 MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 61 kB 7.3 MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 71 kB 7.6 MB/s eta 0:00:01\r\u001b[K     |███████▌                        | 81 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 92 kB 8.8 MB/s eta 0:00:01\r\u001b[K     |█████████▎                      | 102 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |██████████▎                     | 112 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 122 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |████████████                    | 133 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 143 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 153 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 163 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 174 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 184 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 194 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 204 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 215 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████▌           | 225 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 235 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▍         | 245 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▎        | 256 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▏       | 266 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▏      | 276 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 286 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 296 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 307 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▉   | 317 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▉  | 327 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▊ | 337 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▋| 348 kB 7.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 352 kB 7.0 MB/s \n","\u001b[?25hRequirement already satisfied: absl-py>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from tf-slim) (0.12.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from absl-py>=0.2.2->tf-slim) (1.15.0)\n","Installing collected packages: tf-slim\n","Successfully installed tf-slim-1.1.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"dato0bjgu7Xm"},"source":["**TARVITTAVAT IMPORTIT YM.**"]},{"cell_type":"code","metadata":{"id":"CnkvrJRqqVVz","executionInfo":{"status":"ok","timestamp":1639559564620,"user_tz":-120,"elapsed":3039,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}}},"source":["import numpy as np\n","import os\n","import six.moves.urllib as urllib\n","import sys\n","import tarfile\n","import tensorflow as tf\n","import zipfile\n","import pathlib\n","from collections import defaultdict\n","from io import StringIO\n","from matplotlib import pyplot as plt\n","from PIL import Image\n","from IPython.display import display\n","from object_detection.utils import ops as utils_ops\n","from object_detection.utils import label_map_util\n","from object_detection.utils import visualization_utils as vis_util\n"," \n","while \"models\" in pathlib.Path.cwd().parts:\n","    os.chdir('..')"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5NsHfNrKvCPL"},"source":["**VARSINAINEN KOODI JOKA ESIKÄSITTELEE YHDEN KUVAN JA ANTAA SEN MALLIN KÄSITELTÄVÄKSI**"]},{"cell_type":"code","metadata":{"id":"G_z5CE3vrpgi","executionInfo":{"status":"ok","timestamp":1639559564621,"user_tz":-120,"elapsed":18,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}}},"source":["import json\n","from json import JSONEncoder\n","import pandas as pd\n","import base64\n","\n","THRESHOLD = 0.35\n","LINE_THICKNESS = 8\n","\n","def run_inference_for_single_image(model, image):\n","  image = np.asarray(image)\n","  # The input needs to be a tensor, convert it using `tf.convert_to_tensor`.\n","  input_tensor = tf.convert_to_tensor(image)\n","  # The model expects a batch of images, so add an axis with `tf.newaxis`.\n","  input_tensor = input_tensor[tf.newaxis,...]\n","\n","  # Run inference\n","  model_fn = model.signatures['serving_default']\n","  output_dict = model_fn(input_tensor)\n","\n","  # koodi joka korvaa väärät indeksit oikeiksi tunnistuksen kannalta\n","  remapper = {\n","      \"output_2\": \"detection_classes\",\n","      \"output_0\": \"detection_boxes\",\n","      \"output_3\": \"num_detections\",\n","      \"output_1\": \"detection_scores\"  \n","  }\n","\n","  \n","  if \"output_0\" in output_dict.keys():\n","    output_dict[remapper['output_0']] = output_dict.pop('output_0')\n","    output_dict[remapper['output_1']] = output_dict.pop('output_1')\n","    output_dict[remapper['output_2']] = output_dict.pop('output_2')\n","    output_dict[remapper['output_3']] = output_dict.pop('output_3')\n","\n","\n","  # All outputs are batches tensors.\n","  # Convert to numpy arrays, and take index [0] to remove the batch dimension.\n","  # We're only interested in the first num_detections.\n","  num_detections = int(output_dict.pop('num_detections'))\n","  output_dict = {key:value[0, :num_detections].numpy() \n","                 for key,value in output_dict.items()}\n","  output_dict['num_detections'] = num_detections\n","\n","  # detection_classes should be ints.\n","  output_dict['detection_classes'] = output_dict['detection_classes'].astype(np.int64)\n","   \n","  # Handle models with masks:\n","  if 'detection_masks' in output_dict:\n","    # Reframe the the bbox mask to the image size.\n","    detection_masks_reframed = utils_ops.reframe_box_masks_to_image_masks(\n","              output_dict['detection_masks'], output_dict['detection_boxes'],\n","               image.shape[0], image.shape[1])      \n","    detection_masks_reframed = tf.cast(detection_masks_reframed > 0.5,\n","                                       tf.uint8)\n","    output_dict['detection_masks_reframed'] = detection_masks_reframed.numpy()\n","    \n","  return output_dict\n","\n","def show_inference(model, image_path):\n","  # the array based representation of the image will be used later in order to prepare the\n","  # result image with boxes and labels on it.\n","  image_np = np.array(Image.open(image_path))\n","\n","  # Actual detection.\n","    \n","  output_dict = run_inference_for_single_image(model, image_np)\n","\n","  vis_util.visualize_boxes_and_labels_on_image_array(\n","      image_np,\n","      output_dict['detection_boxes'],\n","      output_dict['detection_classes'],\n","      output_dict['detection_scores'],\n","      category_index,\n","      instance_masks=output_dict.get('detection_masks_reframed', None),\n","      use_normalized_coordinates=False,\n","      min_score_thresh=THRESHOLD,\n","      line_thickness=LINE_THICKNESS)\n","\n","  display(Image.fromarray(image_np))\n","  \n","  return output_dict"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dYnQdmgx17MP"},"source":["**LADATAAN OMA SAVED_MODEL DRIVESTÄ**"]},{"cell_type":"code","metadata":{"id":"jqJ8TXQU16sS","executionInfo":{"status":"ok","timestamp":1639559725865,"user_tz":-120,"elapsed":35802,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}},"outputId":"2e0b76fc-24af-4ba9-c24d-35690ff5c6a7","colab":{"base_uri":"https://localhost:8080/"}},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","PATH_TO_SAVED_MODEL = '/content/drive/MyDrive/Pilvilaskenta2021_Noora_Angelva/Harjoitus_7_tehtavat/saved_model'\n","print('Loading model...', end='')\n","\n","# Load saved model and build the detection function\n","detection_model = tf.saved_model.load(PATH_TO_SAVED_MODEL)"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Loading model..."]}]},{"cell_type":"markdown","metadata":{"id":"RRjq_xJ_vrdT"},"source":["**VOIT VAIHTAA ALLA OLEVIA PARAMETREJA JOS HALUAT. THRESHOLD ON SE TUNNISTUSRAJA (%) MINKÄ OBJECT DETECTOR HUOMIOI TULOKSESSA, NYT OLETUKSENA 0.35 ELI 35%. MUISTA KYTKEÄ GOOGLE DRIVE KIINNI COLABIIN!**"]},{"cell_type":"code","metadata":{"id":"HZ9vm9O0vIBQ","executionInfo":{"status":"ok","timestamp":1639559748785,"user_tz":-120,"elapsed":11349,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}}},"source":["# KATSOTAAN MITÄ OBJECT DETECTOR TUNNISTAA KUVASTA\n","THRESHOLD = 0.35\n","LINE_THICKNESS = 8\n","\n","# TÄHÄN LABELSTIEDOSTO MOODLESTA\n","PATH_TO_LABELS = '/content/drive/MyDrive/Pilvilaskenta2021_Noora_Angelva/Harjoitus_7_tehtavat/labels.txt'\n","category_index = label_map_util.create_category_index_from_labelmap(PATH_TO_LABELS, use_display_name=True)\n"," \n","image_path = \"/content/drive/MyDrive/Pilvilaskenta2021_Noora_Angelva/Harjoitus_7_tehtavat/salad.jpg\"\n","output_data = show_inference(detection_model, image_path)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"U1iYAVGqzTXk","executionInfo":{"status":"ok","timestamp":1639559771367,"user_tz":-120,"elapsed":292,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}},"outputId":"94979fce-44e7-45ae-c58b-288a38ba09c0","colab":{"base_uri":"https://localhost:8080/"}},"source":["# jos haluat katsoa miltä object detectorin data näytää, voit ajaa tämän\n","# detection scores = tunnistusprosentti desimaalimuodossa\n","# detection classes = mikä kategoria kyseessä (indeksi)\n","# detection boxes = laatikon sijainti tunnistuksessa kuvan päällä\n","print(output_data)"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["{'detection_boxes': array([[6.4010260e+02, 3.6650497e+02, 3.7340349e+03, 3.5232551e+03],\n","       [2.0228838e+03, 2.9184248e+03, 2.4105884e+03, 3.2483108e+03],\n","       [2.1628076e+03, 1.8874983e+03, 2.7903123e+03, 2.4176423e+03],\n","       [2.8744399e+03, 2.0905571e+03, 3.2488545e+03, 2.4732319e+03],\n","       [2.5722996e+03, 6.8083582e+02, 3.1386677e+03, 1.1212866e+03],\n","       [1.4586710e+03, 5.2598615e+02, 2.1802830e+03, 8.3922748e+02],\n","       [1.4973535e+03, 2.3645457e+03, 1.8366920e+03, 2.6150288e+03],\n","       [1.7513552e+03, 2.8351731e+00, 3.3042578e+03, 1.1046337e+03],\n","       [2.7642793e+03, 1.6343020e+03, 3.1930098e+03, 1.8969377e+03],\n","       [1.9975846e+03, 1.6070138e+03, 2.3689956e+03, 1.9134924e+03],\n","       [2.3126304e+03, 3.0106626e+03, 2.7943455e+03, 3.3463005e+03],\n","       [2.1754558e+03, 2.5641602e+03, 2.6238083e+03, 3.0126130e+03],\n","       [7.9951611e+02, 1.1302753e+03, 1.2416923e+03, 1.7745154e+03],\n","       [2.5829492e+03, 2.9106409e+03, 3.0131521e+03, 3.1477178e+03],\n","       [1.8988992e+03, 1.4398591e+03, 2.1343604e+03, 1.6593276e+03],\n","       [1.0275820e+03, 1.1996294e+03, 1.2999357e+03, 1.6818114e+03],\n","       [2.6922837e+03, 7.3312549e+02, 3.1748784e+03, 1.1003605e+03],\n","       [1.0273345e+03, 9.8482251e+02, 1.2414960e+03, 1.1890132e+03],\n","       [2.7257678e+03, 1.8397867e+03, 3.2547288e+03, 2.4931001e+03],\n","       [1.5252354e+03, 1.0822957e+03, 2.0603704e+03, 1.7364844e+03],\n","       [1.9335170e+03, 1.4419520e+03, 3.6282625e+03, 3.5032749e+03],\n","       [1.9948129e+03, 2.9252092e+03, 2.3793938e+03, 3.2543459e+03],\n","       [3.1381560e+03, 1.6452975e+03, 3.5272908e+03, 1.9599769e+03],\n","       [2.6291069e+03, 9.5728705e+02, 3.0413770e+03, 1.3867770e+03],\n","       [1.1854330e+03, 2.1549988e+03, 1.5489396e+03, 2.6150093e+03],\n","       [3.0092893e+03, 9.3115320e+02, 3.4837104e+03, 1.4673412e+03],\n","       [1.6854216e+03, 1.2528384e+03, 2.1653528e+03, 1.9120892e+03],\n","       [1.3544017e+03, 7.2338599e+02, 1.6401229e+03, 1.0375186e+03],\n","       [8.6486401e+02, 1.8765231e+03, 1.2050320e+03, 2.4767754e+03],\n","       [1.4569465e+03, 5.4795343e+02, 2.0685730e+03, 8.2926764e+02],\n","       [2.2527305e+03, 2.9873486e+03, 2.9539021e+03, 3.4542974e+03],\n","       [5.4557123e+02, 4.9126703e+02, 3.6515962e+03, 3.5630161e+03],\n","       [1.0094621e+03, 2.7341052e+03, 1.3071191e+03, 3.0009934e+03],\n","       [2.5790627e+03, 6.7599432e+02, 2.8883650e+03, 9.0284167e+02],\n","       [2.2073533e+03, 1.8696501e+03, 2.8669133e+03, 2.4114622e+03],\n","       [1.1924957e+03, 1.5814917e+03, 1.5046902e+03, 1.9676643e+03],\n","       [1.5329100e+03, 1.5323405e+03, 2.0159022e+03, 2.1743547e+03],\n","       [8.2172571e+02, 1.5561439e+03, 1.1158470e+03, 1.8123982e+03],\n","       [3.0889648e+03, 0.0000000e+00, 4.1984014e+03, 4.4670499e+02],\n","       [2.9042915e+03, 1.6192513e+03, 3.2169436e+03, 1.8316416e+03],\n","       [1.4936959e+03, 2.3955022e+03, 1.8379094e+03, 2.6820383e+03],\n","       [1.0712275e+03, 1.2807578e+03, 1.2624695e+03, 1.6645101e+03],\n","       [2.4440942e+03, 2.8908301e+03, 3.0048157e+03, 3.2283218e+03],\n","       [1.2075898e+03, 2.4455117e+03, 1.9118409e+03, 3.2466350e+03],\n","       [2.7631321e+03, 2.8231243e+03, 3.0854490e+03, 3.0057920e+03],\n","       [2.2414343e+03, 2.2119121e+03, 2.7922026e+03, 2.8394673e+03],\n","       [2.8215168e+03, 8.1400568e+02, 3.1081252e+03, 1.0995040e+03],\n","       [1.0591885e+03, 9.1716852e+02, 1.2687611e+03, 1.1190787e+03],\n","       [1.9766965e+03, 0.0000000e+00, 3.3788030e+03, 9.9578217e+02],\n","       [2.7949949e+03, 2.5108337e+03, 3.2022524e+03, 2.9172678e+03],\n","       [1.3034207e+03, 3.0095535e+03, 1.7277631e+03, 3.2820645e+03],\n","       [2.6212046e+03, 1.8723755e+03, 3.1170642e+03, 2.4011963e+03],\n","       [1.8932778e+03, 1.8060368e+01, 2.1211064e+03, 2.6608905e+02],\n","       [1.1694181e+03, 1.8263107e+03, 1.5206960e+03, 2.1488442e+03],\n","       [2.3439902e+03, 3.0582646e+03, 2.6431318e+03, 3.3252493e+03],\n","       [2.9607249e+03, 2.1853474e+03, 3.2734319e+03, 2.4890920e+03],\n","       [2.1849553e+03, 5.8780939e+02, 2.7813303e+03, 1.0898022e+03],\n","       [1.9580135e+03, 1.5694663e+03, 2.2867498e+03, 1.8708663e+03],\n","       [7.3134167e+02, 1.7795941e+03, 1.2480399e+03, 2.7032808e+03],\n","       [1.5107090e+03, 1.7753162e+03, 1.8934313e+03, 2.1452051e+03],\n","       [2.7316741e+03, 1.6567029e+03, 3.2109436e+03, 1.9638685e+03],\n","       [1.8849639e+03, 8.0342511e+02, 2.9649529e+03, 1.7187537e+03],\n","       [8.6003461e+02, 1.2885994e+03, 1.1290449e+03, 1.6651295e+03],\n","       [2.7493816e+03, 1.9924092e+03, 2.9540129e+03, 2.2252410e+03],\n","       [1.0675902e+03, 8.7003278e+02, 1.6896260e+03, 1.5855416e+03],\n","       [2.2264841e+03, 1.7701198e+03, 2.4554788e+03, 2.0585459e+03],\n","       [1.8189698e+03, 5.6142847e+02, 2.4053403e+03, 1.0685760e+03],\n","       [2.1648965e+03, 1.9903009e+03, 2.6134224e+03, 2.4430959e+03],\n","       [1.6189746e+03, 4.9256403e+02, 1.9689319e+03, 7.0434827e+02],\n","       [9.0108044e+02, 2.3745613e+03, 1.2387485e+03, 2.7415027e+03],\n","       [9.0272974e+02, 1.7317588e+03, 1.1661570e+03, 2.0863167e+03],\n","       [4.1477729e+03, 4.1421797e+03, 4.4280000e+03, 4.4107612e+03],\n","       [9.8603674e+02, 1.0305604e+03, 1.1749554e+03, 1.2806317e+03],\n","       [2.4675012e+03, 1.9621134e+03, 2.7518787e+03, 2.2266982e+03],\n","       [2.0551636e+03, 2.7274421e+03, 2.5117959e+03, 3.1621689e+03],\n","       [7.5787970e+02, 2.0008340e+03, 9.5767560e+02, 2.3793772e+03],\n","       [1.1260917e+03, 1.2324723e+03, 1.3227241e+03, 1.5530760e+03],\n","       [1.4621693e+03, 6.9557855e+02, 2.0213323e+03, 1.2914807e+03],\n","       [1.5376870e+03, 2.3559692e+03, 1.9033242e+03, 2.6057239e+03],\n","       [2.5921731e+03, 3.1352476e+03, 2.8779238e+03, 3.4160833e+03],\n","       [3.4137546e+03, 2.4209373e+03, 3.6265239e+03, 2.6567805e+03],\n","       [1.0661312e+03, 2.0636753e+03, 1.8040009e+03, 2.9397305e+03],\n","       [2.7146736e+03, 1.7369590e+03, 2.9909265e+03, 1.9909435e+03],\n","       [1.8479983e+03, 1.4044160e+03, 2.2047432e+03, 1.6703248e+03],\n","       [2.2606685e+03, 2.5671399e+03, 2.5577400e+03, 2.9169219e+03],\n","       [9.4104260e+02, 2.0427012e+03, 1.1725833e+03, 2.4222954e+03],\n","       [2.8665540e+03, 2.3225195e+03, 3.1717310e+03, 2.5508406e+03],\n","       [1.8208234e+03, 5.6995050e+02, 2.1081860e+03, 8.1344409e+02],\n","       [2.3582522e+03, 7.3167273e+02, 2.9945103e+03, 1.2068121e+03],\n","       [2.5869094e+03, 2.9109431e+03, 2.8959749e+03, 3.1199478e+03],\n","       [3.1495713e+03, 1.9182753e+03, 3.4576738e+03, 2.2401555e+03],\n","       [2.2350808e+03, 3.0361248e+03, 2.4727388e+03, 3.3046628e+03],\n","       [1.1452754e+03, 1.1192581e+03, 2.0076259e+03, 2.2909802e+03],\n","       [9.2398810e+02, 1.4373542e+03, 1.1934384e+03, 1.7506542e+03],\n","       [1.8995978e+03, 3.2493577e+03, 2.1739170e+03, 3.6307454e+03],\n","       [1.4025492e+03, 9.0354767e+02, 1.6310978e+03, 1.1845735e+03],\n","       [3.3997983e+03, 0.0000000e+00, 3.9947043e+03, 2.0902554e+02],\n","       [2.1833259e+03, 1.1986365e+03, 2.5376804e+03, 1.7239714e+03],\n","       [1.4950121e+03, 1.9068741e+03, 1.7394250e+03, 2.2053086e+03],\n","       [2.1671660e+03, 3.2987163e+03, 2.6100476e+03, 3.5936648e+03]],\n","      dtype=float32), 'detection_scores': array([0.78879297, 0.5897056 , 0.50222987, 0.49589714, 0.45936263,\n","       0.41398117, 0.36879003, 0.34118506, 0.2980119 , 0.28656638,\n","       0.2668712 , 0.24658255, 0.2181065 , 0.19823082, 0.17451544,\n","       0.17387307, 0.16743137, 0.15986021, 0.15969571, 0.15729424,\n","       0.13934427, 0.12883957, 0.12157055, 0.12143844, 0.11745618,\n","       0.11604563, 0.11585741, 0.11426658, 0.11058897, 0.10636005,\n","       0.10391968, 0.1035146 , 0.10260507, 0.10165384, 0.1008786 ,\n","       0.10052908, 0.09578108, 0.09536138, 0.09455714, 0.09334721,\n","       0.09253733, 0.08597301, 0.08356366, 0.08105801, 0.07898837,\n","       0.07898708, 0.0782002 , 0.07739287, 0.07606295, 0.0753027 ,\n","       0.07484393, 0.07230434, 0.07214888, 0.07057846, 0.06974529,\n","       0.06940575, 0.06871219, 0.06762538, 0.06707348, 0.06638356,\n","       0.0660779 , 0.06349363, 0.06339099, 0.06255816, 0.06124333,\n","       0.06064804, 0.06047445, 0.05948093, 0.05883488, 0.05481024,\n","       0.0548097 , 0.05441937, 0.0534691 , 0.05326127, 0.05268774,\n","       0.0520498 , 0.05109717, 0.05079465, 0.05068459, 0.04990965,\n","       0.04927765, 0.04873968, 0.04866926, 0.04809523, 0.04771333,\n","       0.04705599, 0.04697   , 0.04641753, 0.04571112, 0.04570386,\n","       0.04565733, 0.04562912, 0.0448754 , 0.0448399 , 0.04446463,\n","       0.04350026, 0.04338832, 0.04335399, 0.04326411, 0.04324133],\n","      dtype=float32), 'detection_classes': array([2, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 3, 2, 5,\n","       3, 3, 3, 3, 3, 3, 3, 5, 5, 2, 3, 5, 5, 3, 3, 3, 5, 5, 5, 5, 5, 2,\n","       5, 3, 5, 5, 2, 3, 3, 5, 5, 3, 5, 5, 3, 5, 2, 3, 5, 3, 3, 5, 2, 5,\n","       3, 5, 5, 3, 3, 3, 5, 5, 5, 3, 5, 3, 5, 5, 5, 4, 5, 5, 3, 3, 5, 5,\n","       5, 5, 3, 5, 3, 3, 3, 3, 2, 1, 3, 3]), 'num_detections': 100}\n"]}]},{"cell_type":"markdown","metadata":{"id":"F7DOr66w2P5l"},"source":["**TÄSSÄ MYÖS KOODI JOLLA VOIDAAN LEIKATA X-MÄÄRÄ RENKAITA KUVASTA**"]},{"cell_type":"code","metadata":{"id":"sDDwVvfL0QTS","executionInfo":{"status":"error","timestamp":1639560015302,"user_tz":-120,"elapsed":275,"user":{"displayName":"Noora Angelva","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg0Q1VXcSN6LG2JbtVx88j3UwILXZq-1DPHKVm51LU=s64","userId":"17451832446268010812"}},"outputId":"4a7e476d-b5f5-4eaf-aed2-accdeed1dcc9","colab":{"base_uri":"https://localhost:8080/","height":363}},"source":["# silmukalla tulokset läpi thresholdin mukaan\n","counter = 0\n","target_folder = \"/content/drive/MyDrive/Pilvilaskenta2021_Noora_Angelva/Harjoitus_7_tehtavat/testi\"\n","file_name_prefix = \"salad\"\n","\n","for candidate in output_data['detection_scores']:\n","  if float(candidate) >= THRESHOLD:\n","    cutting_box = output_data['detection_boxes'][counter]\n","\n","    # print(cutting_box)\n","\n","    yourImage = Image.open(image_path)\n","    w, h = yourImage.size\n","    x1 = output_data['detection_boxes'][counter][0]\n","    y1 = output_data['detection_boxes'][counter][1]\n","    x2 = output_data['detection_boxes'][counter][2]\n","    y2 = output_data['detection_boxes'][counter][3]\n","\n","    # huom: jos tämä koodi tilttaa kuvan reunoilla olevan tunnistusboxin vuoksi\n","    # ilmoita ohjaajalle, katsotaan koodi erikseen millä sen voi estää\n","    # tämä saattaa tapahtua sen takia että kuvaa yritetään leikata kuvan reunojen yli\n","\n","    # jostain syystä detection boxissa on x ja y -koordinaatit väärin päin\n","    # siksi parametrit tässä järjestyksessä\n","    save_path = target_folder + \"/\" + file_name_prefix + str(counter) + \".jpg\"\n","\n","    yourImage.crop((y1, x1, y2, x2)).save(save_path)\n","    print(\"Leikattu: \" + save_path)\n","    counter += 1\n","\n","\n","print(f\"Yhteensä {counter} kuvaa leikattu!\")\n"],"execution_count":14,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-8d42b50d12c5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     25\u001b[0m     \u001b[0msave_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtarget_folder\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\"/\"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mfile_name_prefix\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcounter\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\".jpg\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 27\u001b[0;31m     \u001b[0myourImage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msave_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     28\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Leikattu: \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0msave_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0mcounter\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/PIL/Image.py\u001b[0m in \u001b[0;36msave\u001b[0;34m(self, fp, format, **params)\u001b[0m\n\u001b[1;32m   2129\u001b[0m                 \u001b[0mfp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuiltins\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"r+b\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2130\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2131\u001b[0;31m                 \u001b[0mfp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuiltins\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"w+b\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2132\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2133\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/Pilvilaskenta2021_Noora_Angelva/Harjoitus_7_tehtavat/testi/salad0.jpg'"]}]}]}